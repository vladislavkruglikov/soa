services:
  user_service:
    build: ./user_service
    container_name: user_service
    ports:
      - "8000:8000"
    volumes:
      - ./user_service/users.db:/app/users.db
    environment:
      - DATABASE_FILE_NAME=sqlite:////app/users.db
    restart: unless-stopped
  
  posts_service:
    build: ./posts_service
    container_name: posts_service
    ports:
      - "50051:50051"
    volumes:
      - ./posts_service/posts.db:/app/posts.db
    environment:
      - DATABASE_FILE_NAME=sqlite:////app/posts.db
    restart: unless-stopped

  gateway_service:
    build: ./gateway_service
    container_name: gateway_service
    ports:
      - "8080:8000"
    environment:
      - USER_SERVICE_URL=http://user_service:8000
    restart: unless-stopped

  user_service_tests:
    build:
      context: ./user_service
      dockerfile: Dockerfile.test
    container_name: user_service_tests
    command: pytest -vv -s --maxfail=1 --disable-warnings -q
    volumes:
      - ./user_service/users.db:/app/users.db
    environment:
      - DATABASE_FILE_NAME=sqlite:////app/users.db
  
  posts_service_tests:
    build:
      context: ./posts_service
      dockerfile: Dockerfile.test
    container_name: posts_service_tests
    command: pytest -vv -s --maxfail=1 --disable-warnings -q
    volumes:
      - ./posts_service/posts.db:/app/posts.db
    environment:
      - DATABASE_FILE_NAME=sqlite:////app/posts.db
  
  gateway_service_tests:
    build:
      context: ./gateway_service
      dockerfile: Dockerfile.test
    container_name: gateway_service_tests
    command: pytest -vv -s --maxfail=1 --disable-warnings -q
